exit
continue
location.update(total_capacity: total_capacity, total_rooms: total_rooms)
continue
location.update(total_capacity: total_capacity, total_rooms: total_rooms)
continue
location.update(total_capacity: total_capacity, total_rooms: total_rooms)
exit
subject.each {|p| expect(p.total_rooms).to be >= 27}
   71:           end
   70:             expect(location.total_capacity).to be >= 30
subject.each do |location|
   71:           end
   70:             expect(location.total_capacity).to be >= 30
subject.each do |location|
exit
expect(location.total_capacity).to be >= 30
expect(location.total_capacity).to be > 30
expect(location.total_capacity).to be >= 30
expect(location.total_rooms).to be > 27
expect(location.total_rooms).to be >= 27
exit
location.total_rooms
location
exit
room.location
assigns[:locations].each {|a| p a.id }
assigns[:locations].each {|a| a.id }
exit
[room.location]
assigns[:locations]
exit
@search.result.have_rooms_fit_with("03/06/2019 - 06/06/2019", 20, 20).page(4).per 4
@search.result.have_rooms_fit_with("","","").size
@search.result.have_rooms_fit_with(nil,nil,nil).size
@search.result.have_rooms_fit_with("03/06/2019 - 06/06/2019", 20, 20).size
@search.result.have_rooms_fit_with("03/06/2019 - 06/06/2019", 20, 20)
@search.result.have_rooms_fit_with
@search.result
search.result
exit
@search.result.size
@search.result
@search
@locations
next
self.size
self
exit
self
exit
end_date
start_date
rooms.to_i
1.to_i
rooms
peoples
exit
peoples
exit
rooms
peoples
exit
rooms
peoples
exit
rooms
rooms.to_i
rooms
peoples
ranges
exit
time_2
time
exit
daterange
exit
daterange[date]
daterange
exit
daterange[0]
daterange
daterande
exit
daterange[0]
daterange[1]
daterange
exit
daterange['date']
daterange[:date]
daterange[date]
daterange
exit
end_date
start_date
exit
daterange
rails c
exit
parent.table[:id]
parent.table[:id] = 4
parent.table
parent.base_klass.table
parent.base_klass.rooms
parent.base_klass
parent.Location
parent
parent.table[1]
parent.table[:start_date]
parent
start_date
exit
end_date
start_date
exit
range_to_startdate_and_enddate search
self.range_to_startdate_and_enddate search
self
search
exit
args.1
args
ransacker
ransacker_args
exit
parent.table
parent
args
exit
daterange
exit
range_to_startdate_and_enddate(search)
search
daterange
search
exit
search.split("-")[1].delete!(' ')
search.split("-")[1].delete!(' ').gsub(/\D/)
search.split("-")[1].number.delete!(' ')
search.split("-")[1]number.delete!(' ').gsub(/\D/)
search.split("-")[1].to_date
search.split("-")[0].to_date
search.split("-")[0]
search.split("-")[1]
search.split("-")
search.split("-")[1].to_date
search
exit
self.daterange
ransack
search
q
search
params
self.first
self
daterange
:daterange
daterange.first.rooms
daterange.first
daterange
